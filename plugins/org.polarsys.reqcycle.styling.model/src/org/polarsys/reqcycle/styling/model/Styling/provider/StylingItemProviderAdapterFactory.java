/**
 * Copyright (c) 2014 AtoS
 *     All rights reserved. This program and the accompanying materials
 *     are made available under the terms of the Eclipse Public License v1.0
 *     which accompanies this distribution, and is available at
 *     http://www.eclipse.org/legal/epl-v10.html *
 *     Contributors:
 *       Sebastien Lemanceau (AtoS) - initial API and implementation and/or initial documentation
 */
package org.polarsys.reqcycle.styling.model.Styling.provider;

import java.util.ArrayList;
import java.util.Collection;

import org.eclipse.emf.common.notify.Adapter;
import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.Notifier;

import org.eclipse.emf.edit.provider.ChangeNotifier;
import org.eclipse.emf.edit.provider.ComposeableAdapterFactory;
import org.eclipse.emf.edit.provider.ComposedAdapterFactory;
import org.eclipse.emf.edit.provider.IChangeNotifier;
import org.eclipse.emf.edit.provider.IDisposable;
import org.eclipse.emf.edit.provider.IEditingDomainItemProvider;
import org.eclipse.emf.edit.provider.IItemLabelProvider;
import org.eclipse.emf.edit.provider.IItemPropertySource;
import org.eclipse.emf.edit.provider.INotifyChangedListener;
import org.eclipse.emf.edit.provider.IStructuredItemContentProvider;
import org.eclipse.emf.edit.provider.ITreeItemContentProvider;

import org.polarsys.reqcycle.styling.model.Styling.util.StylingAdapterFactory;

/**
 * This is the factory that is used to provide the interfaces needed to support Viewers.
 * The adapters generated by this factory convert EMF adapter notifications into calls to {@link #fireNotifyChanged fireNotifyChanged}.
 * The adapters also support Eclipse property sheets.
 * Note that most of the adapters are shared among multiple instances.
 * <!-- begin-user-doc -->
 * <!-- end-user-doc -->
 * @generated
 */
public class StylingItemProviderAdapterFactory extends StylingAdapterFactory implements ComposeableAdapterFactory, IChangeNotifier, IDisposable {
	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final String copyright = "Copyright (c) 2014 AtoS\r\n    All rights reserved. This program and the accompanying materials\r\n    are made available under the terms of the Eclipse Public License v1.0\r\n    which accompanies this distribution, and is available at\r\n    http://www.eclipse.org/legal/epl-v10.html *\r\n    Contributors:\r\n      Sebastien Lemanceau (AtoS) - initial API and implementation and/or initial documentation";

	/**
	 * This keeps track of the root adapter factory that delegates to this adapter factory.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ComposedAdapterFactory parentAdapterFactory;

	/**
	 * This is used to implement {@link org.eclipse.emf.edit.provider.IChangeNotifier}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected IChangeNotifier changeNotifier = new ChangeNotifier();

	/**
	 * This keeps track of all the supported types checked by {@link #isFactoryForType isFactoryForType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected Collection<Object> supportedTypes = new ArrayList<Object>();

	/**
	 * This constructs an instance.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public StylingItemProviderAdapterFactory() {
		supportedTypes.add(IEditingDomainItemProvider.class);
		supportedTypes.add(IStructuredItemContentProvider.class);
		supportedTypes.add(ITreeItemContentProvider.class);
		supportedTypes.add(IItemLabelProvider.class);
		supportedTypes.add(IItemPropertySource.class);
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.polarsys.reqcycle.styling.model.Styling.StylingModel} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected StylingModelItemProvider stylingModelItemProvider;

	/**
	 * This creates an adapter for a {@link org.polarsys.reqcycle.styling.model.Styling.StylingModel}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createStylingModelAdapter() {
		if (stylingModelItemProvider == null) {
			stylingModelItemProvider = new StylingModelItemProvider(this);
		}

		return stylingModelItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.polarsys.reqcycle.styling.model.Styling.StylingPredicate} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected StylingPredicateItemProvider stylingPredicateItemProvider;

	/**
	 * This creates an adapter for a {@link org.polarsys.reqcycle.styling.model.Styling.StylingPredicate}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createStylingPredicateAdapter() {
		if (stylingPredicateItemProvider == null) {
			stylingPredicateItemProvider = new StylingPredicateItemProvider(this);
		}

		return stylingPredicateItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.polarsys.reqcycle.styling.model.Styling.Segment} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected SegmentItemProvider segmentItemProvider;

	/**
	 * This creates an adapter for a {@link org.polarsys.reqcycle.styling.model.Styling.Segment}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createSegmentAdapter() {
		if (segmentItemProvider == null) {
			segmentItemProvider = new SegmentItemProvider(this);
		}

		return segmentItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.polarsys.reqcycle.styling.model.Styling.Icon} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected IconItemProvider iconItemProvider;

	/**
	 * This creates an adapter for a {@link org.polarsys.reqcycle.styling.model.Styling.Icon}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createIconAdapter() {
		if (iconItemProvider == null) {
			iconItemProvider = new IconItemProvider(this);
		}

		return iconItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.polarsys.reqcycle.styling.model.Styling.Style} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected StyleItemProvider styleItemProvider;

	/**
	 * This creates an adapter for a {@link org.polarsys.reqcycle.styling.model.Styling.Style}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createStyleAdapter() {
		if (styleItemProvider == null) {
			styleItemProvider = new StyleItemProvider(this);
		}

		return styleItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.polarsys.reqcycle.styling.model.Styling.Default} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected DefaultItemProvider defaultItemProvider;

	/**
	 * This creates an adapter for a {@link org.polarsys.reqcycle.styling.model.Styling.Default}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createDefaultAdapter() {
		if (defaultItemProvider == null) {
			defaultItemProvider = new DefaultItemProvider(this);
		}

		return defaultItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.polarsys.reqcycle.styling.model.Styling.Styling} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected StylingItemProvider stylingItemProvider;

	/**
	 * This creates an adapter for a {@link org.polarsys.reqcycle.styling.model.Styling.Styling}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createStylingAdapter() {
		if (stylingItemProvider == null) {
			stylingItemProvider = new StylingItemProvider(this);
		}

		return stylingItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.polarsys.reqcycle.styling.model.Styling.ConstantPattern} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ConstantPatternItemProvider constantPatternItemProvider;

	/**
	 * This creates an adapter for a {@link org.polarsys.reqcycle.styling.model.Styling.ConstantPattern}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createConstantPatternAdapter() {
		if (constantPatternItemProvider == null) {
			constantPatternItemProvider = new ConstantPatternItemProvider(this);
		}

		return constantPatternItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.polarsys.reqcycle.styling.model.Styling.ModelPattern} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ModelPatternItemProvider modelPatternItemProvider;

	/**
	 * This creates an adapter for a {@link org.polarsys.reqcycle.styling.model.Styling.ModelPattern}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createModelPatternAdapter() {
		if (modelPatternItemProvider == null) {
			modelPatternItemProvider = new ModelPatternItemProvider(this);
		}

		return modelPatternItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.polarsys.reqcycle.styling.model.Styling.OperationPattern} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected OperationPatternItemProvider operationPatternItemProvider;

	/**
	 * This creates an adapter for a {@link org.polarsys.reqcycle.styling.model.Styling.OperationPattern}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createOperationPatternAdapter() {
		if (operationPatternItemProvider == null) {
			operationPatternItemProvider = new OperationPatternItemProvider(this);
		}

		return operationPatternItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.polarsys.reqcycle.styling.model.Styling.IntParameter} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected IntParameterItemProvider intParameterItemProvider;

	/**
	 * This creates an adapter for a {@link org.polarsys.reqcycle.styling.model.Styling.IntParameter}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createIntParameterAdapter() {
		if (intParameterItemProvider == null) {
			intParameterItemProvider = new IntParameterItemProvider(this);
		}

		return intParameterItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.polarsys.reqcycle.styling.model.Styling.BooleanParameter} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected BooleanParameterItemProvider booleanParameterItemProvider;

	/**
	 * This creates an adapter for a {@link org.polarsys.reqcycle.styling.model.Styling.BooleanParameter}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createBooleanParameterAdapter() {
		if (booleanParameterItemProvider == null) {
			booleanParameterItemProvider = new BooleanParameterItemProvider(this);
		}

		return booleanParameterItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.polarsys.reqcycle.styling.model.Styling.StringParameter} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected StringParameterItemProvider stringParameterItemProvider;

	/**
	 * This creates an adapter for a {@link org.polarsys.reqcycle.styling.model.Styling.StringParameter}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createStringParameterAdapter() {
		if (stringParameterItemProvider == null) {
			stringParameterItemProvider = new StringParameterItemProvider(this);
		}

		return stringParameterItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.polarsys.reqcycle.styling.model.Styling.EObjectParameter} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected EObjectParameterItemProvider eObjectParameterItemProvider;

	/**
	 * This creates an adapter for a {@link org.polarsys.reqcycle.styling.model.Styling.EObjectParameter}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createEObjectParameterAdapter() {
		if (eObjectParameterItemProvider == null) {
			eObjectParameterItemProvider = new EObjectParameterItemProvider(this);
		}

		return eObjectParameterItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.polarsys.reqcycle.styling.model.Styling.Basic} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected BasicItemProvider basicItemProvider;

	/**
	 * This creates an adapter for a {@link org.polarsys.reqcycle.styling.model.Styling.Basic}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createBasicAdapter() {
		if (basicItemProvider == null) {
			basicItemProvider = new BasicItemProvider(this);
		}

		return basicItemProvider;
	}

	/**
	 * This returns the root adapter factory that contains this factory.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public ComposeableAdapterFactory getRootAdapterFactory() {
		return parentAdapterFactory == null ? this : parentAdapterFactory.getRootAdapterFactory();
	}

	/**
	 * This sets the composed adapter factory that contains this factory.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void setParentAdapterFactory(ComposedAdapterFactory parentAdapterFactory) {
		this.parentAdapterFactory = parentAdapterFactory;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public boolean isFactoryForType(Object type) {
		return supportedTypes.contains(type) || super.isFactoryForType(type);
	}

	/**
	 * This implementation substitutes the factory itself as the key for the adapter.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter adapt(Notifier notifier, Object type) {
		return super.adapt(notifier, this);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Object adapt(Object object, Object type) {
		if (isFactoryForType(type)) {
			Object adapter = super.adapt(object, type);
			if (!(type instanceof Class<?>) || (((Class<?>)type).isInstance(adapter))) {
				return adapter;
			}
		}

		return null;
	}

	/**
	 * This adds a listener.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void addListener(INotifyChangedListener notifyChangedListener) {
		changeNotifier.addListener(notifyChangedListener);
	}

	/**
	 * This removes a listener.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void removeListener(INotifyChangedListener notifyChangedListener) {
		changeNotifier.removeListener(notifyChangedListener);
	}

	/**
	 * This delegates to {@link #changeNotifier} and to {@link #parentAdapterFactory}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void fireNotifyChanged(Notification notification) {
		changeNotifier.fireNotifyChanged(notification);

		if (parentAdapterFactory != null) {
			parentAdapterFactory.fireNotifyChanged(notification);
		}
	}

	/**
	 * This disposes all of the item providers created by this factory. 
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void dispose() {
		if (stylingModelItemProvider != null) stylingModelItemProvider.dispose();
		if (stylingPredicateItemProvider != null) stylingPredicateItemProvider.dispose();
		if (segmentItemProvider != null) segmentItemProvider.dispose();
		if (iconItemProvider != null) iconItemProvider.dispose();
		if (styleItemProvider != null) styleItemProvider.dispose();
		if (defaultItemProvider != null) defaultItemProvider.dispose();
		if (stylingItemProvider != null) stylingItemProvider.dispose();
		if (constantPatternItemProvider != null) constantPatternItemProvider.dispose();
		if (modelPatternItemProvider != null) modelPatternItemProvider.dispose();
		if (operationPatternItemProvider != null) operationPatternItemProvider.dispose();
		if (intParameterItemProvider != null) intParameterItemProvider.dispose();
		if (booleanParameterItemProvider != null) booleanParameterItemProvider.dispose();
		if (stringParameterItemProvider != null) stringParameterItemProvider.dispose();
		if (eObjectParameterItemProvider != null) eObjectParameterItemProvider.dispose();
		if (basicItemProvider != null) basicItemProvider.dispose();
	}

}
